// <auto-generated />
using System;
using Adoption.Infrastruct.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Volo.Abp.EntityFrameworkCore;

namespace Adoption.Infrastruct.Data.Migrations
{
    [DbContext(typeof(AdoptionDbContext))]
    [Migration("20210622025946_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("_Abp_DatabaseProvider", EfCoreDatabaseProvider.MySql)
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("Adoption.Domain.Adoption.Aggregate.Adopter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("IdNumber")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("varchar(18) CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("adopters");
                });

            modelBuilder.Entity("Adoption.Domain.Adoption.Aggregate.AdoptionInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<int>("AdopterId")
                        .HasColumnType("int");

                    b.Property<string>("AdoptionReasons")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(400)
                        .HasColumnType("varchar(400) CHARACTER SET utf8mb4")
                        .HasDefaultValue("");

                    b.Property<string>("AdoptionResult")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(400)
                        .HasColumnType("varchar(400) CHARACTER SET utf8mb4")
                        .HasDefaultValue("");

                    b.Property<int>("AdoptionStatus")
                        .HasColumnType("int");

                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40) CHARACTER SET utf8mb4")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("longtext CHARACTER SET utf8mb4")
                        .HasColumnName("ExtraProperties");

                    b.HasKey("Id");

                    b.HasIndex("AdopterId");

                    b.HasIndex("AnimalId");

                    b.ToTable("adoption_infos");
                });

            modelBuilder.Entity("Adoption.Domain.Adoption.Aggregate.Animal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("AnimalType")
                        .HasColumnType("int");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CardId")
                        .IsRequired()
                        .HasMaxLength(28)
                        .HasColumnType("varchar(28) CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("animals");
                });

            modelBuilder.Entity("Adoption.Domain.Adoption.Aggregate.Adopter", b =>
                {
                    b.OwnsOne("Adoption.Domain.Adoption.Aggregate.Address", "Address", b1 =>
                        {
                            b1.Property<int>("AdopterId")
                                .HasColumnType("int");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("varchar(20) CHARACTER SET utf8mb4");

                            b1.Property<string>("Home")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("varchar(20) CHARACTER SET utf8mb4");

                            b1.Property<string>("Province")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("varchar(20) CHARACTER SET utf8mb4");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasMaxLength(40)
                                .HasColumnType("varchar(40) CHARACTER SET utf8mb4");

                            b1.HasKey("AdopterId");

                            b1.ToTable("adopters");

                            b1.WithOwner()
                                .HasForeignKey("AdopterId");
                        });

                    b.Navigation("Address")
                        .IsRequired();
                });

            modelBuilder.Entity("Adoption.Domain.Adoption.Aggregate.AdoptionInfo", b =>
                {
                    b.HasOne("Adoption.Domain.Adoption.Aggregate.Adopter", "Adopter")
                        .WithMany()
                        .HasForeignKey("AdopterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Adoption.Domain.Adoption.Aggregate.Animal", "Animal")
                        .WithMany()
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adopter");

                    b.Navigation("Animal");
                });
#pragma warning restore 612, 618
        }
    }
}
